name: Create and publish a Docker image (dosbox)

on:
  push:
    branches:
      - main
    paths:
      - runners/dosbox/**
      - .github/workflows/build_and_publish_dosbox.yml

env:
  OS_TYPE: debian
  OS_TYPE_NVIDIA: ubuntu
  REGISTRY: ghcr.io
  REPO_NAME: ${{ github.repository }}
  RUNNER: dosbox
  RUNNER_VER: "0.74-3"

jobs:
  build-and-push-images:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        window_system:
          - x11
        video_enc:
          - cpu
          - gpu-intel
          - gpu-nvidia
    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Log in to the Container registry
        uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_ACCESS_TOKEN }}
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
        with:
          images: ${{ env.REGISTRY }}/${{ env.REPO_NAME }}/${{ matrix.window_system }}_${{ matrix.video_enc }}_${{ env.RUNNER }}_${{ env.RUNNER_VER }}
          tags: |
            type=raw,value=latest,enable={{is_default_branch}}
      - name: Set base image
        id: set-base-image
        run: |
          if [[ "${{ matrix.video_enc }}" == "gpu-nvidia" ]]; then
            echo "OS_TYPE=${{ env.OS_TYPE_NVIDIA }}" >> $GITHUB_ENV
          fi
      - name: Build and push Docker image
        id: push
        uses: docker/build-push-action@f2a1d5e99d037542a71f64918e516c093c6f3fc4
        with:
          build-args: |
            BASE_IMAGE=${{ env.REGISTRY }}/${{ env.REPO_NAME }}/${{ matrix.window_system }}_${{ matrix.video_enc }}_base:latest
            OS_TYPE=${{ env.OS_TYPE }}
            RUNNER_VER=${{ env.RUNNER_VER }}
          context: ./runners/${{ env.RUNNER }}
          labels: ${{ steps.meta.outputs.labels }}
          push: true
          tags: ${{ steps.meta.outputs.tags }}
      - name: Generate artifact attestation
        uses: actions/attest-build-provenance@v1
        with:
          subject-name: ${{ env.REGISTRY }}/${{ env.REPO_NAME}}/${{ matrix.window_system }}_${{ matrix.video_enc }}_${{ env.RUNNER }}_${{ env.RUNNER_VER }}
          subject-digest: ${{ steps.push.outputs.digest }}
          push-to-registry: true
